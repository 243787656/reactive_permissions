group = publishGroupId
version = libraryVersion
project.archivesBaseName = artifactName

apply plugin: 'com.jfrog.bintray'
apply plugin: "com.jfrog.artifactory"
apply plugin: 'maven-publish'

task dokkaJavadoc(type: Exec) {
    workingDir '.'
    println "WorkingDir: $workingDir"
    ext.toolJarPath = "$workingDir/libs"
    ext.dokkaJarPath = "$workingDir" + File.separator + "libs" + File.separator + "dokka-fatjar.jar"
    ext.sourceDirs = "$workingDir" + File.separator + "src" + File.separator + "main"
    ext.outputFormat = 'javadoc'
    ext.outputDirectory = "$buildDir" + File.separator + "javadoc"
    commandLine "java -Djava.ext.dirs=$toolJarPath -jar $dokkaJarPath $sourceDirs -format $outputFormat -output $outputDirectory"
}

task kotlinDocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from dokkaJavadoc.outputDirectory
}

task sourceJar(type: Jar) {
    classifier "sources"
    from android.sourceSets.main.java.srcDirs
}

def pomConfig = {
    licenses {
        license {
            name licenseName
            url licenseUrl
            distribution "repo"
        }
    }
    developers {
        developer {
            id developerId
            name developerName
            email developerEmail
        }
    }
}

publishing {
    publications {
        mavenKotlin(MavenPublication) {
            artifact kotlinDocJar
            artifact sourceJar
            pom.withXml {
                def root = asNode()
                root.appendNode('description', libraryDescription)
                root.children().last() + pomConfig
                def dependenciesNode = root.appendNode('dependencies')
                configurations.compile.allDependencies.each {
                    if (it.group && it.name && it.version) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

afterEvaluate {
    publishing.publications.mavenKotlin.artifact(bundleRelease)
}

bintray {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    publications = ['mavenKotlin']
    publish = true
    pkg {
        repo = 'jaragua'
        name = libraryName
        desc = libraryDescription
        websiteUrl = libraryWebSite
        issueTrackerUrl = libraryIssueTracker
        vcsUrl = libraryVersionControl
        licenses = [ license ]
        publicDownloadNumbers = true
    }
}

artifactory {
    contextUrl = 'http://oss.jfrog.org/artifactory'
    resolve {
        repository {
            repoKey = 'libs-release'
        }
    }
    publish {
        repository {
            repoKey = 'oss-snapshot-local'
            username = bintray.user
            password = bintray.key
            maven = true
        }
        defaults {
            publications('mavenKotlin')
            publishArtifacts = true
        }
    }
}